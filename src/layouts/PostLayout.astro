---
import TextContainer from "./TextContainer.astro";
import LogoShort from "../assets/logo/short.png";
import "../styles/post.css";

function dateObjToFullDate(date: Date, timezone: string) {
    const options: Intl.DateTimeFormatOptions = {
        timeZone: timezone,
        month: "long",
        day: "numeric",
        year: "numeric",
    };
    return new Intl.DateTimeFormat("en-US", options).format(date);
}

interface PostProps {
    title: string;
    pubDate: Date;
    pubTimezone: string;
    description: string;
    authors: string[];
    tags: string[];
}

const props = Astro.props.content || Astro.props;
const usableProps: PostProps = {
    title: props.title || "Untitled Article",
    pubDate: !isNaN(Date.parse(props.pubDate))
        ? new Date(props.pubDate)
        : new Date(0),
    pubTimezone: props.pubTimezone ? props.pubTimezone : "America/Chicago",
    description: props.description || "No description.",
    authors: Array.isArray(props.authors) ? props.authors : [],
    tags: Array.isArray(props.tags) ? props.tags : [],
};
---

<TextContainer>
    <article class="relative">
        <header class="flex flex-col mb-[2rem] mx-auto max-w-[50%]">
            <dl>
                <dt class="flex flex-col items-center mb-[1rem] text-center">
                    <h1 id="title">{usableProps.title}</h1>
                    <img src={LogoShort.src} alt="TLL" width={300} />
                </dt>
                <dd>
                    <span id="description">{usableProps.description}</span>

                    <ul id="tags" class="flex flex-wrap gap-[.5rem] my-[.5rem]">
                        {
                            usableProps.tags.length !== 0 &&
                                usableProps.tags.map((tag: string) => (
                                    <div
                                        id={`tag-${tag}`}
                                        class="py-[.25rem] px-[1rem] bg-background-1 border-[.2rem] border-foreground-secondary rounded-[.5rem]"
                                    >
                                        {tag}
                                    </div>
                                ))
                        }
                    </ul>
                </dd>
                {
                    usableProps.pubDate && (
                        <dd id="published" class="text-sm text-foreground-2">
                            <strong>Published:</strong>{" "}
                            {dateObjToFullDate(
                                usableProps.pubDate,
                                usableProps.pubTimezone,
                            )}
                        </dd>
                    )
                }
            </dl>
        </header>

        <slot />
    </article>
</TextContainer>
